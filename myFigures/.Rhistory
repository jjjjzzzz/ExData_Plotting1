help()
q()
q()
workspace()
data
n<-c(1:100)
plot(c)
plot(c)
library("KernSmooth", lib.loc="/usr/lib/R/library")
KernSmooth
a<-available.packages()
head(rownames(a),3)
install.packages("KernSmooth")
install.packages("KernSmooth")
remove.packages("KernSmooth", lib="~/R/i686-pc-linux-gnu-library/3.0")
search()
library("KernSmooth", lib.loc="/usr/lib/R/library")
search()
getwd()
x<-4
class(x)
x<-c(4,"a",TRUE)
class(x)
x
x=c(1,3,5)
y=c(3,2,10)
cbind(x,y)
rbind(x,y)
x=list(2,"a","b",TRUE)
x[[2]]
class(x[[2]])
x=1:4
y=2
x+y
x=1:20
x[x>10]=4
x
x= read.csv("Host//Documents//Kurse//RProgramming//rprog-data-quiz1_data/hw1_data.csv")
x
head(x)
summary(x)
str(x)
x[152,153]
x[c(152,153)]
x[c(152,153),]
x[47,]
count
table(x$Ozone[Ozone==NA])
table(x$Ozone[Ozone>20])
table(x$Ozone>20)
table(x$Ozone==NA)
table(is.NA(x$Ozone)
)
y=x$Ozone
yy
y
table(y==NA)
table(is.na(y))
table(is.na(x$Ozone))
table(mean(x$Ozone[is.na(x$Ozone)]))
mean(x$Ozone[is.na(x$Ozone)])
mean(x$Ozone[!is.na(x$Ozone)])
mean(x$Ozone, na.rm = TRUE)
mean(x$Ozone, na.rm = FALSE)
mean(x$Solar.R[x$Ozone>31 & x$Temp>90], na.rm = TRUE)
mean(x$Temp[x$Month==60], na.rm = TRUE)
mean(x$Temp[x$Month==6], na.rm = TRUE)
max(x$Ozone[x$Month==6], na.rm = TRUE)
max(x$Ozone[x$Month==5], na.rm = TRUE)
cub<-function(x,n){x^3}
cub(3)
x=1:10
if(x>5) {x=0}
f<-function(x) {
g<-function(y) {
y+z
}
z=4
x+g(x)
}
z=10
f(3)
enviroment
enviroment()
environment()
environment(fun = f)
environment(fun = mean)
r <- function(x) {
x<- x+u
}
r(8)
u=10
r(8)
r <- function(x) {
x+u
}
r(8)
data(iris)
?iris
iris
mean(iris$Sepal.Length[species=="virginica"])
mean(iris$Sepal.Length[iris$species=="virginica"])
mean(iris$Sepal.Length[iris$species=="virginica"],na.rm = TRUE)
str(iris)
mean(iris$Sepal.Length[iris$Species=="virginica"],na.rm = TRUE)
colMeans(iris)
apply(iris,1, mean)
apply(iris[,1:4],2, mean)
apply(iris[,1:4],1, mean)
x=matrix(1:10,2,3)
x=matrix(1:6,2,3)
x
colMeans(x)
rowMeans(x)
data(mtcars)
head(mtcars)
mean(mtcars$mpg,mtcars$cyl)
apply(mtcars,2,mean)
split(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
x
tapply(x[,1],x[,2],mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
str(mtcar)
str(mtcars)
tapply(mtcars$hp,mtcars$cyl,mean)
t=tapply(mtcars$hp,mtcars$cyl,mean)
t
class(t)
t[4]
t[,4]
t[2,3]-t[2,1]
t[2,1]
t[0,1]
str(t)
t["4"]
class(t["4"])
t["8"]-t["4"]
t=tapply(mtcars$hp,mtcars$cyl,mean)
t
209.21429-82.63636
debug(ls)
ls
debug(ls)
ls()
q
e
x
exit
()
exit()
undebug(ls)
set.seed(1)
rpois(5,2)
p=rpois(5,2)
qpois(p)
set.seed(10)
x<-rbinom(10,10,0.5)
x
e<-rnorm(10,0,20)
y=0.5+2*x+e
plot(x,y)
y
p=rpois(5,2)
p
Rprof()
fit<-lm(y~x1+x2)
fit<-lm(y~ x1+x2)
Rprof(NULL)
summaryRprof()
system.time()
system.time(lm)
system.time(rnorm(10,0,20))
R.version
R.version.string
install.packages("swirl")
library(swirl)
library(swirl)
install.packages("RCurl")
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
swirl()
5+7
x<-5+7
x
y=x-3
y<-x-3
y
c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555)
z<-c(z, 555)
c(z, 555, z)
z*2 +100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2 +1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
sqe(0,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect = c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf<-num_vect[num_vect<1]
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse=" ")
c(my_char, "JIwu")
my_name<-c(my_char,"Swirl")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X","Y","Z"), sep="")
LETTERS
paste(LETTERS, 1:4, sep="-")
c(44,NA,5,NA)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x>0
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2, norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[bar]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-("Bill","Gina","Kelly","Sean2")
patients<-c("Bill","Gina","Kelly","Sean2")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_matrix)
class(my_data)
c("patient", "age", "weight", "bp", "rating", "test")
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data)<-cnames
my_data
l
jpeg()
xfig()
postscipt()
x<-rnome(100)
x<-rnorm(100)
y<-rnorm(100)
plot(x,y)
x11()
plot(x,y)
dev.copy2pdf("test.pdf")
dev.copy2pdf(out.type = "pdf")
getwd()
rm(list = "*")
rm(list = "")
rm()
rm(list = ls())
epc = read.table(file = "Host//Documents//Kurse//ExploratoryDataAnalysis/exdata-data-household_power_consumption//household_power_consumption.txt",header = TRUE, sep = ';',na.strings = '?',quote = "")
dim(epc)
class(epc)
head(epc)
strptime(16/12/2006)
strptime("16/12/2006")
?strptime
strptime("16/12/2006","%d/%m/%Y")
as.Date("16/12/2006")
?as.Date
as.Date("16/12/2006","%d/%m/%Y")
epc_r<- epc[as.Date($Date,"%d/%m/%Y")=="2007-02-01" | as.Date($Date,"%d/%m/%Y")=="2007-02-02",]
epc<- epc[as.Date(epc$Date,"%d/%m/%Y")=="2007-02-01" | as.Date(epc$Date,"%d/%m/%Y")=="2007-02-02",]
dim(epc)
head(epc)
epc
package.install("data.table")
install.packages("data.table")
library(data.table)
getwd()
setwd()
setwd("Host/Documents/Kurse/ExploratoryDataAnalysis/ExData_Plotting1/myFigures/")
getwd()
epc<-fread(file="household_power_consumption.txt", na.strings = '?', sep = ',', header = TRUE, skip = "01/02/2007")
epc<-fread(input="household_power_consumption.txt", na.strings = '?', sep = ',', header = TRUE, skip = "01/02/2007")
epc<-fread(input="household_power_consumption.txt", na.strings = '?', sep = ';', header = TRUE, skip = "01/02/2007")
epc<-fread(input="household_power_consumption.txt", na.strings = '?', sep = '', header = TRUE, skip = "1/2/2007")
epc<-fread(input="household_power_consumption.txt", na.strings = '?', sep = ';', header = TRUE, skip = "1/2/2007")
head(epc)
tail(epc#)
a
tail(epc)
?fread
head(epc)
names(epc)
sum(epc[[1]] %in% c("1/2/2007","2/2/2007"))
class(epc[[1]])
epc[[1]]
sum(epc[[1]] %in% c("1/2/2007","2/2/2007"))
epc[2880,]
epc[2879,]
epc<-fread(input="household_power_consumption.txt", na.strings = '?', sep = ';', header = TRUE, skip = "1/2/2007", nrows = 2879)
dim(epc)
epc<-fread(input="household_power_consumption.txt", na.strings = '?', sep = ';', header = FALSE, skip = "1/2/2007", nrows = 2879)
dim(epc)
head(epc)
epc_header <- fread(input="household_power_consumption.txt", sep = ';', header = FALSE, nrows = 1)
epc_header
names(epc) <- epc_header[1,]
class(epc_header[1,])
class(as.list(epc_header[1,])
)
as.list(epc_header[1,])
names(epc) <- as.list(epc_header[1,])
names(epc) <- as.vector(epc_header[1,])
names(epc) <- as.vector(epc_header[1,], mode = "any")
as.vector(epc_header[1,], mode = "any")
class(as.vector(epc_header[1,], mode = "any"))
class(as.vector(as.matrix(epc_header[1,], mode = "any"))
)
as.vector(as.matrix(epc_header[1,], mode = "any"))
names(epc) <- as.vector(as.matrix(epc_header[1,], mode = "any"))
head(epc)
?setnames
setnames(epc, new = as.vector(as.matrix(epc_header[1,], mode = "any")))
setnames(epc, old <- names(epc), new = as.vector(as.matrix(epc_header[1,], mode = "any")))
setnames(epc, old <- names(epc) new = as.vector(as.matrix(epc_header[1,], mode = "any")))
epc<-fread(input="household_power_consumption.txt", na.strings = '?', sep = ';', header = FALSE, skip = "1/2/2007", nrows = 2879)
epc_header <- fread(input="household_power_consumption.txt", sep = ';', header = FALSE, nrows = 1)
setnames(epc, old <- names(epc), new = as.vector(as.matrix(epc_header[1,], mode = "any")))
head(ep)
head(epc)
epc[,Date = as.Date(Date, "%d/%m/%Y")]
epc[,Date <- as.Date(Date, "%d/%m/%Y")]
head(epc)
epc[, Date := as.Date(Date, "%d/%m/%Y")]
head(epc)
epc
hist(epc$Global_active_power)
xlab("Global Active Power(kilowatts)")
hist(epc$Global_active_power, xlab = "Global Active Power(kilowatts)")
hist(epc$Global_active_power, xlab = "Global Active Power(kilowatts)", main = "Global Active Power")
hist(epc$Global_active_power, col = "red", xlab = "Global Active Power(kilowatts)", main = "Global Active Power")
hist(epc$Global_active_power, col = "red", xlab = "Global Active Power(kilowatts)", main = "Global Active Power", ylim = c(0,1200))
png(filename = "plot1.png", width = 480, height = 480)
hist(epc$Global_active_power, col = "red", xlab = "Global Active Power(kilowatts)", main = "Global Active Power", ylim = c(0,1200))
dev.off()
head(epc)
weekdays("2007-02-01")
?weekdays
weekdays.Date("2007-02-01")
weekdays("2007-02-01")
install.packages
install.packages(lubridate)
install.packages("lubridate")
library(lubridate)
wday
